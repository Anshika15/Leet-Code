/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode() {}
 *     ListNode(int val) { this.val = val; }
 *     ListNode(int val, ListNode next) { this.val = val; this.next = next; }
 * }
 */
class Solution {
    public ListNode reverseBetween(ListNode head, int left, int right) {
        
        if(head == null || head.next == null)
            return head;
        
        while(left <= right)
        {
            ListNode temp1 = getNode(head, left);
            ListNode temp2 = getNode(head, right);
            
            int temp = temp2.val;
            temp2.val = temp1.val;
            temp1.val = temp;
            
            left++;
            right--;
        }
        
        return head;
        
    }
    
    ListNode getNode(ListNode head, int idx)
    {
        ListNode temp = head;
        for(int i = 0; i < idx-1; i++)
            temp = temp.next;
        return temp;
    }
}
